{
    "swagger": "2.0",
    "info": {
      "version": "1.0.0",
      "title": "DescubreAragon Application API",
      "description": "DescubreAragon Application API",
      "license": {
        "name": "MIT",
        "url": "https://opensource.org/licenses/MIT"
      }
    },
    "host": "localhost:3000",
    "basePath": "/",
    "tags": [
      {
        "name": "Users",
        "description": "User interaction API"
      },
      {
        "name": "Apartments",
        "description": "Apartments interaction API"
      },
      {
        "name":"Campings",
        "description": "Campings interaction API"
      },
      {
        "name":"Guides",
        "description": "Guides interaction API"
      },
      {
        "name":"Hotels",
        "description": "Hotels interaction API"
      },
      {
        "name":"Information Points",
        "description": "Information Points interaction API"
      },
      {
        "name":"Restaurants",
        "description": "Restaurants interaction API"
      },
      {
        "name":"Rural Houses",
        "description": "Rural Houses interaction API"
      },
      {
        "name":"Shelters",
        "description": "Shelters interaction API"
      },
      {
        "name":"Tourist Offices",
        "description": "Tourist Offices interaction API"
      },
      {
        "name":"Parser Data",
        "description": "Parser Data interaction API"
      }
    ],
    "schemes": [
      "http"
    ],
    "consumes": [
      "application/json"
    ],
    "produces": [
      "application/json"
    ],
    "paths": {
      "/users/add": {
        "post": {
          "summary": "Create new user in system",
          "tags": [
            "Users"
          ],
          "parameters": [
            {
              "name": "user",
              "in": "body",
              "description": "User that we want to create",
              "schema": {
                "$ref": "#/definitions/User"
              }
            }
          ],
          "produces": [
            "application/json"
          ],
          "responses": {
            "200": {
              "description": "New user has been created",
              "schema": {
                "$ref": "#/definitions/User"
              }
            },
            "500":{
              "description":"Info could not be retrieved",
              "schema":{
                "$ref":"#/definitions/Error"
              }
            }
          }
        }
      },
      "/users/getAll": {
        "get": {
          "summary": "Get all users in system",
          "tags": [
            "Users"
          ],
          "produces": [
            "application/json"
          ],
          "responses": {
            "200": {
              "description": "List of all users",
              "schema": {
                "type":"array",
                "items":{
                  "$ref": "#/definitions/User"
                }
              }
            },
            "500":{
              "description":"Info could not be retrieved",
              "schema":{
                "$ref":"#/definitions/Error"
              }
            }
          }
        }
      },
      "/users/count": {
        "get": {
          "summary": "Count the number of users in the system",
          "tags": [
            "Users"
          ],
          "produces": [
            "application/json"
          ],
          "responses": {
            "200": {
              "description": "Number of users in the system",
              "schema": {
                "$ref": "#/definitions/Number"
              }
            },
            "500":{
              "description":"Info could not be retrieved",
              "schema":{
                "$ref":"#/definitions/Error"
              }
            }
          }
        }
      },
      "/users/countByEmail": {
        "get": {
          "summary": "Count the number of users in the system by a given email",
          "tags": [
            "Users"
          ],
          "parameters": [
            {
              "name": "email",
              "in": "path",
              "required": true,
              "description": "Email we want to use for count",
              "type": "string"
            }
          ],
          "produces": [
            "application/json"
          ],
          "responses": {
            "200": {
              "description": "Number of users in the system with the given email",
              "schema": {
                "type": "integer"
              }
            },
            "500":{
              "description":"Info could not be retrieved",
              "schema":{
                "$ref":"#/definitions/Error"
              }
            }
          }
        }
      },
      "/users/getUser": {
        "get": {
          "summary": "Get a user by his id",
          "tags": [
            "Users"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "description": "Id of the user we want to retreive",
              "type": "string"
            }
          ],
          "produces": [
            "application/json"
          ],
          "responses": {
            "200": {
              "description": "User with the given id",
              "schema": {
                "$ref": "#/definitions/User"
              }
            },
            "500":{
              "description":"Info could not be retrieved",
              "schema":{
                "$ref":"#/definitions/Error"
              }
            }
          }
        }
      },
      "/users/search": {
        "get": {
          "summary": "Search users by name, surname and email",
          "tags": [
            "Users"
          ],
          "parameters": [
            {
              "name": "email",
              "in": "path",
              "required": true,
              "description": "Email we want to use for the search",
              "type": "string"
            },
            {
              "name": "name",
              "in": "path",
              "required": true,
              "description": "Name we want to use for the search",
              "type": "string"
            },
            {
              "name": "surname",
              "in": "path",
              "required": true,
              "description": "Surname we want to use for the search",
              "type": "string"
            }
          ],
          "produces": [
            "application/json"
          ],
          "responses": {
            "200": {
              "description": "List of users that match the search",
              "schema": {
                "type":"array",
                "items":{
                  "$ref": "#/definitions/User"
                } 
              }
            },
            "500":{
              "description":"Info could not be retrieved",
              "schema":{
                "$ref":"#/definitions/Error"
              }
            }
          }
        }
      },
      "/users/getUserByToken": {
        "parameters": [
          {
            "name": "token",
            "required": true,
            "in": "path",
            "description": "Token from where the User will be retrieved",
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ], 
        "post": {
          "summary": "Retrieve the User assigned to the token",
          "tags": [
            "Users"
          ],
          "responses": {
            "200": {
              "description":"User retrieved",
              "schema": {
                "$ref": "#/definitions/User"
              }
            },
            "500":{
              "description":"Info could not be retrieved",
              "schema":{
                "$ref":"#/definitions/Error"
              }
            }
          }
        }
      },
      "/users/send": {
        "parameters": [
          {
            "name": "email",
            "required": true,
            "in": "body",
            "description": "Email who will receive the email",
            "type": "string"
          },
          {
            "name": "text",
            "required": true,
            "in": "body",
            "description": "Body of the email",
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ], 
        "post": {
          "summary": "Send an email to a User",
          "tags": [
            "Users"
          ],
          "responses": {
            "200": {
              "description":"Email sended correctly"
            },
            "500":{
              "description":"Info could not be retrieved",
              "schema":{
                "$ref":"#/definitions/Error"
              }
            }
          }
        }
      },
      "/users/update": {
        "parameters":[
          {
            "name": "user",
            "in": "body",
            "required":true,
            "description": "User with new values of properties",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "produces": [
          "application/json"
        ], 
        "put": {
          "summary": "Update the information of a User",
          "tags": [
            "Users"
          ],
          "responses": {
            "200": {
              "description":"User is updated",
              "schema": {
                "$ref": "#/definitions/User"
              }
            },
            "500":{
              "description":"Info could not be retrieved",
              "schema":{
                "$ref":"#/definitions/Error"
              }
            }
          }
        }
      },
      "/apartments/get":{
        "parameters":[
          {
            "name":"_id",
            "in":"path",
            "required":true,
            "description":"Id of the apartment we want the info",
            "schema":{
              "type":"string"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "get":{
          "summary": "Get the info of an Apartment",
          "tags":[
            "Apartments"
          ],
          "responses":{
            "200":{
              "description":"Apartment found",
              "schema":{
                "$ref":"#/definitions/Apartment"
              }
            },
            "500":{
              "description":"Info could not be retrieved",
              "schema":{
                "$ref":"#/definitions/Error"
              }
            }
          }
        } 
      },
      "/apartments/count":{
        "produces": [
          "application/json"
        ],
        "get":{
          "summary": "Get the number of Apartments saved",
          "tags":[
            "Apartments"
          ],
          "responses":{
            "200":{
              "description":"Number of apartments saved",
              "schema":{
                "$ref":"#/definitions/Number"
              }
            },
            "500":{
              "description":"Info could not be retrieved",
              "schema":{
                "$ref":"#/definitions/Error"
              }
            }
          }
        } 
      },
      "/apartments/getAll":{
        "produces": [
          "application/json"
        ],
        "get":{
          "summary": "Get the info of all the Apartments",
          "tags":[
            "Apartments"
          ],
          "responses":{
            "200":{
              "description":"Apartments found",
              "schema":{
                "type": "array",
                "items": {
                  "$ref": "#/definitions/Apartment"
                }
              }
            },
            "500":{
              "description":"Info could not be retrieved",
              "schema":{
                "$ref":"#/definitions/Error"
              }
            }
          }
        } 
      },
      "/apartments/search":{
        "parameters":[
          {
            "name":"province",
            "in":"path",
            "required":true,
            "description":"Name of the province we want info about",
            "schema":{
              "type":"string"
            }
          },
          {
            "name":"region",
            "in":"path",
            "required":true,
            "description":"Name of the region we want info about",
            "schema":{
              "type":"string"
            }
          },
          {
            "name":"municipality",
            "in":"path",
            "required":true,
            "description":"Name of the municipality we want info about",
            "schema":{
              "type":"string"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "get":{
          "summary": "Get the info of all the Apartments that match the query search",
          "tags":[
            "Apartments"
          ],
          "responses":{
            "200":{
              "description":"Apartments found",
              "schema":{
                "type": "array",
                "items": {
                  "$ref": "#/definitions/Apartment"
                }
              }
            },
            "500":{
              "description":"Info could not be retrieved",
              "schema":{
                "$ref":"#/definitions/Error"
              }
            }
          }
        } 
      },
      "/campings/get":{
        "parameters":[
          {
            "name":"_id",
            "in":"path",
            "required":true,
            "description":"Id of the camping we want info about",
            "schema":{
              "type":"string"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "get":{
          "summary": "Get the info of a Camping that matches the id",
          "tags":[
            "Campings"
          ],
          "responses":{
            "200":{
              "description":"Camping found",
              "schema":{
                "$ref": "#/definitions/Camping"
              }
            },
            "500":{
              "description":"Info could not be retrieved",
              "schema":{
                "$ref":"#/definitions/Error"
              }
            }
          }
        }
      },
      "/campings/count":{
        "produces": [
          "application/json"
        ],
        "get":{
          "summary": "Get the number of Campings saved",
          "tags":[
            "Campings"
          ],
          "responses":{
            "200":{
              "description":"Number of campings saved",
              "schema":{
                "$ref":"#/definitions/Number"
              }
            },
            "500":{
              "description":"Info could not be retrieved",
              "schema":{
                "$ref":"#/definitions/Error"
              }
            }
          }
        } 
      },
      "/campings/getAll":{
        "produces": [
          "application/json"
        ],
        "get":{
          "summary": "Get the info of all the Campings",
          "tags":[
            "Campings"
          ],
          "responses":{
            "200":{
              "description":"Campings found",
              "schema":{
                "type": "array",
                "items": {
                  "$ref": "#/definitions/Camping"
                }
              }
            },
            "500":{
              "description":"Info could not be retrieved",
              "schema":{
                "$ref":"#/definitions/Error"
              }
            }
          }
        } 
      },
      "/campings/search":{
        "parameters":[
          {
            "name":"province",
            "in":"path",
            "required":true,
            "description":"Name of the province we want info about",
            "schema":{
              "type":"string"
            }
          },
          {
            "name":"region",
            "in":"path",
            "required":true,
            "description":"Name of the region we want info about",
            "schema":{
              "type":"string"
            }
          },
          {
            "name":"municipality",
            "in":"path",
            "required":true,
            "description":"Name of the municipality we want info about",
            "schema":{
              "type":"string"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "get":{
          "summary": "Get the info of all the Campings that match the query search",
          "tags":[
            "Campings"
          ],
          "responses":{
            "200":{
              "description":"Campings found",
              "schema":{
                "type": "array",
                "items": {
                  "$ref": "#/definitions/Camping"
                }
              }
            },
            "500":{
              "description":"Info could not be retrieved",
              "schema":{
                "$ref":"#/definitions/Error"
              }
            }
          }
        } 
      },
      "/guides/get":{
        "parameters":[
          {
            "name":"_id",
            "in":"path",
            "required":true,
            "description":"Id of the guide we want info about",
            "schema":{
              "type":"string"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "get":{
          "summary": "Get the info of a Guide that matches the id",
          "tags":[
            "Guides"
          ],
          "responses":{
            "200":{
              "description":"Guide found",
              "schema":{
                "$ref": "#/definitions/Guide"
              }
            },
            "500":{
              "description":"Info could not be retrieved",
              "schema":{
                "$ref":"#/definitions/Error"
              }
            }
          }
        }
      },
      "/guides/count":{
        "produces": [
          "application/json"
        ],
        "get":{
          "summary": "Get the number of Guides saved",
          "tags":[
            "Guides"
          ],
          "responses":{
            "200":{
              "description":"Number of guides saved",
              "schema":{
                "$ref":"#/definitions/Number"
              }
            },
            "500":{
              "description":"Info could not be retrieved",
              "schema":{
                "$ref":"#/definitions/Error"
              }
            }
          }
        } 
      },
      "/guides/getAll":{
        "produces": [
          "application/json"
        ],
        "get":{
          "summary": "Get the info of all the Guides",
          "tags":[
            "Guides"
          ],
          "responses":{
            "200":{
              "description":"Guides found",
              "schema":{
                "type": "array",
                "items": {
                  "$ref": "#/definitions/Guide"
                }
              }
            },
            "500":{
              "description":"Info could not be retrieved",
              "schema":{
                "$ref":"#/definitions/Error"
              }
            }
          }
        } 
      },
      "/guides/search":{
        "parameters":[
          {
            "name":"province",
            "in":"path",
            "required":true,
            "description":"Name of the province we want info about",
            "schema":{
              "type":"string"
            }
          },
          {
            "name":"region",
            "in":"path",
            "required":true,
            "description":"Name of the region we want info about",
            "schema":{
              "type":"string"
            }
          },
          {
            "name":"municipality",
            "in":"path",
            "required":true,
            "description":"Name of the municipality we want info about",
            "schema":{
              "type":"string"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "get":{
          "summary": "Get the info of all the Guides that match the query search",
          "tags":[
            "Guides"
          ],
          "responses":{
            "200":{
              "description":"Guides found",
              "schema":{
                "type": "array",
                "items": {
                  "$ref": "#/definitions/Guide"
                }
              }
            },
            "500":{
              "description":"Info could not be retrieved",
              "schema":{
                "$ref":"#/definitions/Error"
              }
            }
          }
        } 
      },
      "/hotels/get":{
        "parameters":[
          {
            "name":"_id",
            "in":"path",
            "required":true,
            "description":"Id of the guide we want info about",
            "schema":{
              "type":"string"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "get":{
          "summary": "Get the info of a Hotel that matches the id",
          "tags":[
            "Hotels"
          ],
          "responses":{
            "200":{
              "description":"Hotel found",
              "schema":{
                "$ref": "#/definitions/Hotel"
              }
            },
            "500":{
              "description":"Info could not be retrieved",
              "schema":{
                "$ref":"#/definitions/Error"
              }
            }
          }
        }
      },
      "/hotels/count":{
        "produces": [
          "application/json"
        ],
        "get":{
          "summary": "Get the number of Hotels saved",
          "tags":[
            "Hotels"
          ],
          "responses":{
            "200":{
              "description":"Number of hotels saved",
              "schema":{
                "$ref":"#/definitions/Number"
              }
            },
            "500":{
              "description":"Info could not be retrieved",
              "schema":{
                "$ref":"#/definitions/Error"
              }
            }
          }
        } 
      },
      "/hotels/getAll":{
        "produces": [
          "application/json"
        ],
        "get":{
          "summary": "Get the info of all the Hotels",
          "tags":[
            "Hotels"
          ],
          "responses":{
            "200":{
              "description":"Hotels found",
              "schema":{
                "type": "array",
                "items": {
                  "$ref": "#/definitions/Hotel"
                }
              }
            },
            "500":{
              "description":"Info could not be retrieved",
              "schema":{
                "$ref":"#/definitions/Error"
              }
            }
          }
        } 
      },
      "/hotels/search":{
        "parameters":[
          {
            "name":"province",
            "in":"path",
            "required":true,
            "description":"Name of the province we want info about",
            "schema":{
              "type":"string"
            }
          },
          {
            "name":"region",
            "in":"path",
            "required":true,
            "description":"Name of the region we want info about",
            "schema":{
              "type":"string"
            }
          },
          {
            "name":"municipality",
            "in":"path",
            "required":true,
            "description":"Name of the municipality we want info about",
            "schema":{
              "type":"string"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "get":{
          "summary": "Get the info of all the Hotels that match the query search",
          "tags":[
            "Hotels"
          ],
          "responses":{
            "200":{
              "description":"Hotels found",
              "schema":{
                "type": "array",
                "items": {
                  "$ref": "#/definitions/Hotel"
                }
              }
            },
            "500":{
              "description":"Info could not be retrieved",
              "schema":{
                "$ref":"#/definitions/Error"
              }
            }
          }
        } 
      },
      "/informationPoints/get":{
        "parameters":[
          {
            "name":"_id",
            "in":"path",
            "required":true,
            "description":"Id of the Information Point we want info about",
            "schema":{
              "type":"string"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "get":{
          "summary": "Get the info of a Information Point that matches the id",
          "tags":[
            "Information Points"
          ],
          "responses":{
            "200":{
              "description":"Information Point found",
              "schema":{
                "$ref": "#/definitions/InformationPoint"
              }
            },
            "500":{
              "description":"Info could not be retrieved",
              "schema":{
                "$ref":"#/definitions/Error"
              }
            }
          }
        }
      },
      "/informationPoints/count":{
        "produces": [
          "application/json"
        ],
        "get":{
          "summary": "Get the number of Information Points saved",
          "tags":[
            "Information Points"
          ],
          "responses":{
            "200":{
              "description":"Number of information points saved",
              "schema":{
                "$ref":"#/definitions/Number"
              }
            },
            "500":{
              "description":"Info could not be retrieved",
              "schema":{
                "$ref":"#/definitions/Error"
              }
            }
          }
        } 
      },
      "/informationPoints/getAll":{
        "produces": [
          "application/json"
        ],
        "get":{
          "summary": "Get the info of all the Information Points",
          "tags":[
            "Information Points"
          ],
          "responses":{
            "200":{
              "description":"Information Points found",
              "schema":{
                "type": "array",
                "items": {
                  "$ref": "#/definitions/InformationPoint"
                }
              }
            },
            "500":{
              "description":"Info could not be retrieved",
              "schema":{
                "$ref":"#/definitions/Error"
              }
            }
          }
        } 
      },
      "/informationPoints/search":{
        "parameters":[
          {
            "name":"province",
            "in":"path",
            "required":true,
            "description":"Name of the province we want info about",
            "schema":{
              "type":"string"
            }
          },
          {
            "name":"region",
            "in":"path",
            "required":true,
            "description":"Name of the region we want info about",
            "schema":{
              "type":"string"
            }
          },
          {
            "name":"municipality",
            "in":"path",
            "required":true,
            "description":"Name of the municipality we want info about",
            "schema":{
              "type":"string"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "get":{
          "summary": "Get the info of all the Information Points that match the query search",
          "tags":[
            "Information Points"
          ],
          "responses":{
            "200":{
              "description":"Information Points found",
              "schema":{
                "type": "array",
                "items": {
                  "$ref": "#/definitions/InformationPoint"
                }
              }
            },
            "500":{
              "description":"Info could not be retrieved",
              "schema":{
                "$ref":"#/definitions/Error"
              }
            }
          }
        } 
      },
      "/restaurants/get":{
        "parameters":[
          {
            "name":"_id",
            "in":"path",
            "required":true,
            "description":"Id of the Restaurant we want info about",
            "schema":{
              "type":"string"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "get":{
          "summary": "Get the info of a Restaurant that matches the id",
          "tags":[
            "Restaurants"
          ],
          "responses":{
            "200":{
              "description":"Restaurant found",
              "schema":{
                "$ref": "#/definitions/Restaurant"
              }
            },
            "500":{
              "description":"Info could not be retrieved",
              "schema":{
                "$ref":"#/definitions/Error"
              }
            }
          }
        }
      },
      "/restaurants/count":{
        "produces": [
          "application/json"
        ],
        "get":{
          "summary": "Get the number of Restaurants saved",
          "tags":[
            "Restaurants"
          ],
          "responses":{
            "200":{
              "description":"Number of Restaurants saved",
              "schema":{
                "$ref":"#/definitions/Number"
              }
            },
            "500":{
              "description":"Info could not be retrieved",
              "schema":{
                "$ref":"#/definitions/Error"
              }
            }
          }
        } 
      },
      "/restaurants/getAll":{
        "produces": [
          "application/json"
        ],
        "get":{
          "summary": "Get the info of all the Restaurants",
          "tags":[
            "Restaurants"
          ],
          "responses":{
            "200":{
              "description":"Restaurants found",
              "schema":{
                "type": "array",
                "items": {
                  "$ref": "#/definitions/Restaurant"
                }
              }
            },
            "500":{
              "description":"Info could not be retrieved",
              "schema":{
                "$ref":"#/definitions/Error"
              }
            }
          }
        } 
      },
      "/restaurants/search":{
        "parameters":[
          {
            "name":"province",
            "in":"path",
            "required":true,
            "description":"Name of the province we want info about",
            "schema":{
              "type":"string"
            }
          },
          {
            "name":"region",
            "in":"path",
            "required":true,
            "description":"Name of the region we want info about",
            "schema":{
              "type":"string"
            }
          },
          {
            "name":"municipality",
            "in":"path",
            "required":true,
            "description":"Name of the municipality we want info about",
            "schema":{
              "type":"string"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "get":{
          "summary": "Get the info of all the Restaurants that match the query search",
          "tags":[
            "Restaurants"
          ],
          "responses":{
            "200":{
              "description":"Restaurants found",
              "schema":{
                "type": "array",
                "items": {
                  "$ref": "#/definitions/Restaurant"
                }
              }
            },
            "500":{
              "description":"Info could not be retrieved",
              "schema":{
                "$ref":"#/definitions/Error"
              }
            }
          }
        } 
      },
      "/ruralHouses/get":{
        "parameters":[
          {
            "name":"_id",
            "in":"path",
            "required":true,
            "description":"Id of the Rural House we want info about",
            "schema":{
              "type":"string"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "get":{
          "summary": "Get the info of a Rural House that matches the id",
          "tags":[
            "Rural Houses"
          ],
          "responses":{
            "200":{
              "description":"Rural House found",
              "schema":{
                "$ref": "#/definitions/RuralHouse"
              }
            },
            "500":{
              "description":"Info could not be retrieved",
              "schema":{
                "$ref":"#/definitions/Error"
              }
            }
          }
        }
      },
      "/ruralHouses/count":{
        "produces": [
          "application/json"
        ],
        "get":{
          "summary": "Get the number of Rural Houses saved",
          "tags":[
            "Rural Houses"
          ],
          "responses":{
            "200":{
              "description":"Number of Rural Houses saved",
              "schema":{
                "$ref":"#/definitions/Number"
              }
            },
            "500":{
              "description":"Info could not be retrieved",
              "schema":{
                "$ref":"#/definitions/Error"
              }
            }
          }
        } 
      },
      "/ruralHouses/getAll":{
        "produces": [
          "application/json"
        ],
        "get":{
          "summary": "Get the info of all the Rural Houses",
          "tags":[
            "Rural Houses"
          ],
          "responses":{
            "200":{
              "description":"Rural Houses found",
              "schema":{
                "type": "array",
                "items": {
                  "$ref": "#/definitions/RuralHouse"
                }
              }
            },
            "500":{
              "description":"Info could not be retrieved",
              "schema":{
                "$ref":"#/definitions/Error"
              }
            }
          }
        } 
      },
      "/ruralHouses/search":{
        "parameters":[
          {
            "name":"province",
            "in":"path",
            "required":true,
            "description":"Name of the province we want info about",
            "schema":{
              "type":"string"
            }
          },
          {
            "name":"region",
            "in":"path",
            "required":true,
            "description":"Name of the region we want info about",
            "schema":{
              "type":"string"
            }
          },
          {
            "name":"municipality",
            "in":"path",
            "required":true,
            "description":"Name of the municipality we want info about",
            "schema":{
              "type":"string"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "get":{
          "summary": "Get the info of all the Rural Houses that match the query search",
          "tags":[
            "Rural Houses"
          ],
          "responses":{
            "200":{
              "description":"Rural Houses found",
              "schema":{
                "type": "array",
                "items": {
                  "$ref": "#/definitions/RuralHouse"
                }
              }
            },
            "500":{
              "description":"Info could not be retrieved",
              "schema":{
                "$ref":"#/definitions/Error"
              }
            }
          }
        } 
      },
      "/shelters/get":{
        "parameters":[
          {
            "name":"_id",
            "in":"path",
            "required":true,
            "description":"Id of the Shelter we want info about",
            "schema":{
              "type":"string"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "get":{
          "summary": "Get the info of a Shelter that matches the id",
          "tags":[
            "Shelters"
          ],
          "responses":{
            "200":{
              "description":"Shelter found",
              "schema":{
                "$ref": "#/definitions/Shelter"
              }
            },
            "500":{
              "description":"Info could not be retrieved",
              "schema":{
                "$ref":"#/definitions/Error"
              }
            }
          }
        }
      },
      "/shelters/count":{
        "produces": [
          "application/json"
        ],
        "get":{
          "summary": "Get the number of Shelters saved",
          "tags":[
            "Shelters"
          ],
          "responses":{
            "200":{
              "description":"Number of Shelters saved",
              "schema":{
                "$ref":"#/definitions/Number"
              }
            },
            "500":{
              "description":"Info could not be retrieved",
              "schema":{
                "$ref":"#/definitions/Error"
              }
            }
          }
        } 
      },
      "/shelters/getAll":{
        "produces": [
          "application/json"
        ],
        "get":{
          "summary": "Get the info of all the Shelters",
          "tags":[
            "Shelters"
          ],
          "responses":{
            "200":{
              "description":"Shelters found",
              "schema":{
                "type": "array",
                "items": {
                  "$ref": "#/definitions/Shelter"
                }
              }
            },
            "500":{
              "description":"Info could not be retrieved",
              "schema":{
                "$ref":"#/definitions/Error"
              }
            }
          }
        } 
      },
      "/shelters/search":{
        "parameters":[
          {
            "name":"province",
            "in":"path",
            "required":true,
            "description":"Name of the province we want info about",
            "schema":{
              "type":"string"
            }
          },
          {
            "name":"region",
            "in":"path",
            "required":true,
            "description":"Name of the region we want info about",
            "schema":{
              "type":"string"
            }
          },
          {
            "name":"municipality",
            "in":"path",
            "required":true,
            "description":"Name of the municipality we want info about",
            "schema":{
              "type":"string"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "get":{
          "summary": "Get the info of all the Shelters that match the query search",
          "tags":[
            "Shelters"
          ],
          "responses":{
            "200":{
              "description":"Shelters found",
              "schema":{
                "type": "array",
                "items": {
                  "$ref": "#/definitions/Shelter"
                }
              }
            },
            "500":{
              "description":"Info could not be retrieved",
              "schema":{
                "$ref":"#/definitions/Error"
              }
            }
          }
        } 
      },
      "/touristOffices/get":{
        "parameters":[
          {
            "name":"_id",
            "in":"path",
            "required":true,
            "description":"Id of the Tourist Office we want info about",
            "schema":{
              "type":"string"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "get":{
          "summary": "Get the info of a Tourist Office that matches the id",
          "tags":[
            "Tourist Offices"
          ],
          "responses":{
            "200":{
              "description":"Tourist Office found",
              "schema":{
                "$ref": "#/definitions/TouristOffice"
              }
            },
            "500":{
              "description":"Info could not be retrieved",
              "schema":{
                "$ref":"#/definitions/Error"
              }
            }
          }
        }
      },
      "/touristOffices/count":{
        "produces": [
          "application/json"
        ],
        "get":{
          "summary": "Get the number of Tourist Offices saved",
          "tags":[
            "Tourist Offices"
          ],
          "responses":{
            "200":{
              "description":"Number of Tourist Offices saved",
              "schema":{
                "$ref":"#/definitions/Number"
              }
            },
            "500":{
              "description":"Info could not be retrieved",
              "schema":{
                "$ref":"#/definitions/Error"
              }
            }
          }
        } 
      },
      "/touristOffices/getAll":{
        "produces": [
          "application/json"
        ],
        "get":{
          "summary": "Get the info of all the Tourist Offices",
          "tags":[
            "Tourist Offices"
          ],
          "responses":{
            "200":{
              "description":"Tourist Officers found",
              "schema":{
                "type": "array",
                "items": {
                  "$ref": "#/definitions/TouristOffice"
                }
              }
            },
            "500":{
              "description":"Info could not be retrieved",
              "schema":{
                "$ref":"#/definitions/Error"
              }
            }
          }
        } 
      },
      "/touristOffices/search":{
        "parameters":[
          {
            "name":"province",
            "in":"path",
            "required":true,
            "description":"Name of the province we want info about",
            "schema":{
              "type":"string"
            }
          },
          {
            "name":"region",
            "in":"path",
            "required":true,
            "description":"Name of the region we want info about",
            "schema":{
              "type":"string"
            }
          },
          {
            "name":"municipality",
            "in":"path",
            "required":true,
            "description":"Name of the municipality we want info about",
            "schema":{
              "type":"string"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "get":{
          "summary": "Get the info of all the Tourist Offices that match the query search",
          "tags":[
            "Tourist Offices"
          ],
          "responses":{
            "200":{
              "description":"Tourist Offices found",
              "schema":{
                "type": "array",
                "items": {
                  "$ref": "#/definitions/TouristOffice"
                }
              }
            },
            "500":{
              "description":"Info could not be retrieved",
              "schema":{
                "$ref":"#/definitions/Error"
              }
            }
          }
        } 
      },
      "/parserdata/guides":{
        "post": {
          "summary": "Delete existing guides data and import, from external source, new data",
          "tags": [
            "Parser Data"
          ],
          "produces": [
            "application/json"
          ],
          "responses": {
            "200": {
              "description": "New guides data has been saved",
              "schema": {
                "$ref": "#/definitions/String"
              }
            },
            "500":{
              "description":"New data could not be saved",
              "schema":{
                "$ref":"#/definitions/Error"
              }
            }
          }
        }  
      },
      "/parserdata/apartments":{
        "post": {
          "summary": "Delete existing apartments data and import, from external source, new data",
          "tags": [
            "Parser Data"
          ],
          "produces": [
            "application/json"
          ],
          "responses": {
            "200": {
              "description": "New apartments data has been saved",
              "schema": {
                "$ref": "#/definitions/String"
              }
            },
            "500":{
              "description":"New data could not be saved",
              "schema":{
                "$ref":"#/definitions/Error"
              }
            }
          }
        }  
      },
      "/parserdata/informationPoints":{
        "post": {
          "summary": "Delete existing information points data and import, from external source, new data",
          "tags": [
            "Parser Data"
          ],
          "produces": [
            "application/json"
          ],
          "responses": {
            "200": {
              "description": "New information points data has been saved",
              "schema": {
                "$ref": "#/definitions/String"
              }
            },
            "500":{
              "description":"New data could not be saved",
              "schema":{
                "$ref":"#/definitions/Error"
              }
            }
          }
        }  
      },
      "/parserdata/restaurants":{
        "post": {
          "summary": "Delete existing restaurants data and import, from external source, new data",
          "tags": [
            "Parser Data"
          ],
          "produces": [
            "application/json"
          ],
          "responses": {
            "200": {
              "description": "New restaurants data has been saved",
              "schema": {
                "$ref": "#/definitions/String"
              }
            },
            "500":{
              "description":"New data could not be saved",
              "schema":{
                "$ref":"#/definitions/Error"
              }
            }
          }
        }  
      },
      "/parserdata/ruralHouses":{
        "post": {
          "summary": "Delete existing rural houses data and import, from external source, new data",
          "tags": [
            "Parser Data"
          ],
          "produces": [
            "application/json"
          ],
          "responses": {
            "200": {
              "description": "New rural houses data has been saved",
              "schema": {
                "$ref": "#/definitions/String"
              }
            },
            "500":{
              "description":"New data could not be saved",
              "schema":{
                "$ref":"#/definitions/Error"
              }
            }
          }
        }  
      },
      "/parserdata/touristOffices":{
        "post": {
          "summary": "Delete existing tourist offices data and import, from external source, new data",
          "tags": [
            "Parser Data"
          ],
          "produces": [
            "application/json"
          ],
          "responses": {
            "200": {
              "description": "New tourist offices data has been saved",
              "schema": {
                "$ref": "#/definitions/String"
              }
            },
            "500":{
              "description":"New data could not be saved",
              "schema":{
                "$ref":"#/definitions/Error"
              }
            }
          }
        }  
      },
      "/parserdata/hotels":{
        "post": {
          "summary": "Delete existing hotels data and import, from external source, new data",
          "tags": [
            "Parser Data"
          ],
          "produces": [
            "application/json"
          ],
          "responses": {
            "200": {
              "description": "New hotels data has been saved",
              "schema": {
                "$ref": "#/definitions/String"
              }
            },
            "500":{
              "description":"New data could not be saved",
              "schema":{
                "$ref":"#/definitions/Error"
              }
            }
          }
        }  
      },
      "/parserdata/campings":{
        "post": {
          "summary": "Delete existing campings data and import, from external source, new data",
          "tags": [
            "Parser Data"
          ],
          "produces": [
            "application/json"
          ],
          "responses": {
            "200": {
              "description": "New campings data has been saved",
              "schema": {
                "$ref": "#/definitions/String"
              }
            },
            "500":{
              "description":"New data could not be saved",
              "schema":{
                "$ref":"#/definitions/Error"
              }
            }
          }
        }  
      },
      "/parserdata/shelters":{
        "post": {
          "summary": "Delete existing shelters data and import, from external source, new data",
          "tags": [
            "Parser Data"
          ],
          "produces": [
            "application/json"
          ],
          "responses": {
            "200": {
              "description": "New shelters data has been saved",
              "schema": {
                "$ref": "#/definitions/String"
              }
            },
            "500":{
              "description":"New data could not be saved",
              "schema":{
                "$ref":"#/definitions/Error"
              }
            }
          }
        }  
      }
    },
    "definitions": {
      "Number": {
        "type": "integer"
      },
      "String": {
        "type": "string"
      },
      "Error":{
        "properties":{
          "error":{
            "type":"string"
          }
        }
      },
      "User": {
        "required": [
          "_id",
          "nombre",
          "apellidos",
          "email"
        ],
        "properties": {
          "_id": {
            "type": "string",
            "uniqueItems": true
          },
          "nombre": {
            "type": "string"
          },
          "apellidos": {
            "type": "string"
          },
          "fechaNacimiento": {
            "type": "Date"
          },
          "email": {
            "type": "string",
            "uniqueItems": true
          },
          "contrasena": {
            "type": "string"
          },
          "telefono": {
            "type": "integer"
          },
          "pais": {
            "type": "string"
          },
          "provincia": {
            "type": "string"
          },
          "baneado": {
            "type": "boolean"
          },
          "activo": {
            "type": "boolean"
          },
          "admin": {
            "type": "boolean"
          },
          "__v": {
            "type": "integer"
          }
        }
      },
      "Alojamiento":{
        "properties": {
          "signatura":{
            "type":"string"
          },
          "nombre":{
            "type":"string"
          },
          "direccion":{
            "type":"string"
          },
          "codigoPostal":{
            "$ref": "#/definitions/Number"
          },
          "provincia":{
            "type":"string"
          },
          "comarca":{
            "type":"string"
          },
          "municipio":{
            "type":"string"
          },
          "capacidad":{
            "$ref":"#/definitions/Number"
          },
          "email":{
            "type":"string"
          },
          "telefono":{
            "type":"string"
          }
        }
      },
      "RuralHouse":{
        "properties":{
          "comun":{
            "$ref":"#/definitions/Alojamiento"
          },
          "espigas":{
            "$ref":"#/definitions/Number"
          },
          "tipo":{
            "type":"string"
          }
        }
      },
      "Apartment":{
        "properties":{
          "comun":{
            "$ref":"#/definitions/Alojamiento"
          }
        }
      },
      "Camping":{
        "properties":{
          "comun":{
            "$ref":"#/definitions/Alojamiento"
          }
        }
      },
      "Hotel":{
        "properties":{
          "comun":{
            "$ref":"#/definitions/Alojamiento"
          },
          "grupo":{
            "type":"string"
          },
          "estrellas":{
            "$ref":"#/definitions/Number"
          }
        }
      },
      "Shelter":{
        "properties":{
          "comun":{
            "$ref":"#/definitions/Alojamiento"
          }
        }
      },
      "Guide":{
        "properties":{
          "signatura":{
            "type":"string"
          },
          "nombre":{
            "type":"string"
          },
          "apellidos":{
            "type":"string"
          },
          "telefono":{
            "type":"string"
          },
          "espanol":{
            "type":"boolean"
          },
          "ingles":{
            "type":"boolean"
          },
          "frances":{
            "type":"boolean"
          },
          "aleman":{
            "type":"boolean"
          },
          "italiano":{
            "type":"boolean"
          },
          "otros":{
            "type": "boolean"
          }
        }
      },
      "TouristOffice":{
        "properties":{
          "signatura":{
            "type":"string"
          },
          "nombre":{
            "type":"string"
          },
          "direccion":{
            "type":"string"
          },
          "provincia":{
            "type":"string"
          },
          "municipio":{
            "type":"string"
          },
          "telefono":{
            "type":"string"
          },
          "horario":{
            "type":"string"
          }
        }
      },
      "InformationPoint":{
        "properties":{
          "signatura":{
            "type":"string"
          },
          "nombre":{
            "type":"string"
          },
          "direccion":{
            "type":"string"
          },
          "provincia":{
            "type":"string"
          },
          "municipio":{
            "type":"string"
          }
        }
      },
      "Restaurant":{
        "properties":{
          "signatura":{
            "type":"string"
          },
          "nombre":{
            "type":"string"
          },
          "direccion":{
            "type":"string"
          },
          "codigoPostal":{
            "$ref":"#/definitions/Number"
          },
          "Provincia":{
            "type":"string"
          },
          "comarca":{
            "type":"string"
          },
          "municipio":{
            "type":"string"
          },
          "capacidad":{
            "$ref":"#/definitions/Number"
          },
          "telefono":{
            "type":"string"
          },
          "categoria":{
            "$ref":"#/definitions/Number"
          }
        }
      },
      "Message":{
        "properties":{
          "emisor":{
            "type":"string"
          },
          "texto":{
            "type":"string"
          },
          "hora":{
            "type":"string"
          }
        },
        "required":[
          "emisor",
          "texto",
          "hora"
        ]
      },
      "Chat": {
        "properties":{
          "nomEntrada":{
            "type":"string"
          },
          "nomUsuario":{
            "type":"string"
          },
          "emailEntrada":{
            "type":"string"
          },
          "emailUsuario":{
            "type":"string"
          },
          "mensajes":{
            "type": "array",
            "items": {
              "$ref": "#/definitions/Mensaje"
            }
          }
        },
        "required":[
          "nomEntrada",
          "nomUsuario",
          "emailEntrada",
          "emailUsuario"
        ]
      }
    }
  }